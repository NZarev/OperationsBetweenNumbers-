1.Инициализиране на входа с помощта на Scanner:
  Програмата започва с инициализиране на обект от тип Scanner, който позволява четене на входни данни от потребителя.
2.Четене на входни стойности:
  Програмата приема три входни данни:
    n1 – цяло число (първият операнд).
    n2 – цяло число (вторият операнд).
    operator – символ, който определя операцията (+, -, *, /, %).
3.Използване на конструкцията switch за проверка на операцията:
  В зависимост от оператора се изпълнява съответната аритметична операция.
  За всеки оператор се разглеждат различни случаи.
4.Операция при събиране (+):
  Изчислява се сборът на n1 и n2.
  Проверява се дали резултатът е четно или нечетно число.
  Принтира се резултатът и дали той е "even" (четен) или "odd" (нечетен).
5.Операция при изваждане (-):
  Изчислява се разликата между n1 и n2.
  Проверява се дали резултатът е четно или нечетно число.
  Принтира се резултатът и дали той е "even" (четен) или "odd" (нечетен).
6.Операция при умножение (*):
  Изчислява се произведението на n1 и n2.
  Проверява се дали резултатът е четно или нечетно число.
  Принтира се резултатът и дали той е "even" (четен) или "odd" (нечетен).
7.Операция при деление (/):
  Проверява се дали второто число n2 е равно на 0, защото деление на 0 не е допустимо.
  Ако е 0, се принтира съобщение за грешка ("Cannot divide by zero").
  Ако не е 0, се извършва делението и се принтира резултатът с точност до 2 знака след десетичната запетая.
8.Операция при остатък от деление (%):
  Подобно на делението, се проверява дали второто число n2 е 0.
  Ако е 0, се принтира съобщение за грешка ("Cannot divide by zero").
  Ако не е 0, се изчислява остатъкът от делението и се принтира резултатът.
9.Обработка на невалиден оператор:
  Ако операторът не е един от валидните (+, -, *, /, %), се принтира съобщение за грешка ("Invalid operator").
10.Затваряне на Scanner:
  След като операциите са завършени, Scanner-ът се затваря, за да освободи ресурси.
